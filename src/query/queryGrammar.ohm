Query {
  Main = (Expression | MatchExpression) end
  Expression = (FromInstance | FromTemplate) Select
  MatchExpression = (FromInstance | FromTemplate) Match Select

  FromInstance = fromLiteral ident "/" ident
  FromTemplate = fromLiteral (asterisk | ident)
  Select = selectLiteral Path
  Path = (StepCond | Step) ("." (StepCond | Step))*
  Step = ident
  StepCond = (asterisk | ident) PredicateExpression
  PredicateExpression = "[" Predicate "]"
  Predicate = Predicate logic Predicate -- multi
            | Condition -- single
  Condition = shortcut? Value comparison Value
  Match = matchLiteral Node MatchStep*
  MatchStep = Relationship Node
  Node = "(" ident? (":" ident)? PredicateExpression? ")"
  Relationship = "-[" ident? (":" ident)? "]->"

  Value = path | literal

  fromLiteral = "FROM"
  matchLiteral = "MATCH"
  selectLiteral = "SELECT"

  asterisk = "*"
  comparison = ("=" | "!=" | ">=" | "<=" | ">" | "<")
  ident = letter (alnum | "_" | "-")*
  logic = "AND" | "OR"
  path = letter (alnum | "_" | "-" | ".")*
  literal = string | float | digit | bool
  bool = "true" | "false" | "TRUE" | "FALSE"
  shortcut = "@" | "#" | ":"
  string
    = "'" (~"'" any)* "'"
    | "\"" (~"\"" any)* "\""
  float   = digit? "." digit+

  comment = "/*" (~"*/" any)* "*/"
  space += comment
}
